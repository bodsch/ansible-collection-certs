---

- name: create /etc/certbot directory
  ansible.builtin.file:
    state: directory
    path: /etc/certbot
    mode: "0750"

- name: create /etc/certbot/domains directory
  ansible.builtin.file:
    state: directory
    path: /etc/certbot/domains
    mode: "0750"

# - name: merge certbot configuration between defaults and custom
#   ansible.builtin.set_fact:
#     certbot_systemd: "{{ certbot_defaults_systemd |
#       combine( certbot_systemd, recursive=True ) }}"

# # TODO
# # only for nginx support
# - name: ensure that ssl-dhparams.pem is present
#   ansible.builtin.stat:
#     path: "{{ certbot_config.conf_directory }}/ssl-dhparams.pem"
#   register: dhparams_exists
#
# - name: Downloading recommended TLS parameters ...
#   when:
#     - dhparams_exists.stat is defined
#     - not dhparams_exists.stat.exists
#   ansible.builtin.get_url:
#     url: "https://raw.githubusercontent.com/certbot/certbot/master/{{ item }}"
#     dest: "{{ certbot_config.conf_directory }}/{{ item | basename }}"
#     mode: "0444"
#   loop:
#     - certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf
#     - certbot/certbot/ssl-dhparams.pem

- name: create well-known directory
  ansible.builtin.file:
    state: directory
    path: "{{ certbot_config.well_known_directory }}"
    owner: "{{ certbot_system.user }}"
    group: "{{ certbot_system.group }}"
    mode: "0777"

- name: fix rights for well-known directory
  ansible.builtin.file:
    state: directory
    path: "{{ certbot_config.www_directory }}"
    owner: "{{ certbot_system.user }}"
    group: "{{ certbot_system.group }}"
    mode: "0777"
    recurse: true
# -----------------------------------------------------------------------------

- name: ensure that domain certificates are present
  bodsch.certs.domain_certs:
    path: "{{ certbot_config.conf_directory }}/live"
    file: fullchain.pem
    certificates: "{{ certbot_tls_certificates }}"
  register: domain_certificates_exists

- name: define missing domains
  ansible.builtin.set_fact:
    certbot_missing_domains: "{{ domain_certificates_exists.certificate_miss }}"

- name: missing certificates
  ansible.builtin.debug:
    msg: "{{ certbot_missing_domains }}"

- name: IMPORTANT NOTE
  ansible.builtin.debug:
    msg: |
      The following task can have a long runtime.
      It depends on the response time of the web service or whether the DNS configuration is correct.

- name: create a new certificate with certbot
  bodsch.certs.certbot:
    state: certonly
    webroot_path: "{{ certbot_config.www_directory }}"
    rsa_key_size: "{{ certbot_config.rsa_key_size | int }}"
    domains: "{{ certbot_tls_certificates }}"
    certbot_base_directory: "{{ certbot_config.conf_directory }}"
    email: "{{ certbot_config.email }}"
    test_cert: "{{ certbot_test_cert | default('true') }}"
    dry_run: "{{ certbot_dry_run | default('true') }}"
    auto_expand: "{{ certbot_auto_expand | default('true') }}"
    arguments: "{{ certbot_staging_args | default([]) }}"
  register: create_certificates
  when:
    - certbot_tls_certificates is defined
    - certbot_tls_certificates | count > 0
  ignore_errors: true

- name: d
  ansible.builtin.debug:
    msg: "{{ create_certificates }}"
  when:
    create_certificates.errors | default('0') | int > 0

...
